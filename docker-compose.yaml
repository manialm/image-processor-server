
services:
  api:
    build:
      context: .
      network: host
    container_name: fastapi-app
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    working_dir: /workspace
    command: >
      sh -c "
        uv run -- uvicorn app.api:app --host 0.0.0.0 --port 8000 --reload --log-level info &
        uv run -- python -m app.worker &
        uv run -- python -m app.db
      "

    # for live reloading
    volumes:
      - ./app:/workspace/app

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 2s
      timeout: 10s
      retries: 5

    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    # environment:
    #   RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_prometheus listen_port 15692"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - "8080:8080"
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - rabbitmq
      - api

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      -  prometheus-data:/prometheus
    env_file:
      - '.env'

    depends_on:
      - cadvisor
      - rabbitmq
      - api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DASHBOARDS=/var/lib/grafana/dashboards
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      

volumes:
  rabbitmq-data:
  prometheus-data:
